<Window x:Class="EasyMuisc.Windows.WinSettings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EasyMuisc.Windows"
                xmlns:flat="clr-namespace:WpfControls.FlatStyle;assembly=WpfControls"

        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        
        Title="设置" SizeToContent="WidthAndHeight" >
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" Padding="12,2,12,2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,3" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF73CFFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <StackPanel Margin="4">
        <flat:CheckBox x:Name="chkOffset" Content="通过Offset标签而不是改变全部时间来保存偏移的Lrc歌词"/>
        <TextBlock FontSize="5"/>
        <flat:CheckBox x:Name="chkPreferMusicInfo" Content="保存歌词时优先采用歌曲信息而非原歌词信息"/>
        <TextBlock FontSize="5"/>
        <flat:CheckBox x:Name="chkLrcAnimation" Content="歌词动画" />
        <TextBlock FontSize="5"/>
        <flat:CheckBox x:Name="chkMusicSettings" Content="音乐设置对所有歌曲生效" />
        <TextBlock FontSize="5"/>
        <!--<StackPanel Orientation="Horizontal">
            <TextBlock Text="歌词界面显示类型：   "/>
            <RadioButton x:Name="chkListBoxLrc" Content="ListBox歌词         "/>
            <RadioButton x:Name="chkStackPanel" Content="StackPanel歌词"/>
        </StackPanel>
        <TextBlock FontSize="5"/>-->
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="最小化到托盘图标方式：" Margin="0,0,8,0" VerticalAlignment="Center"/>
            <!--<RadioButton x:Name="chkCloseBtnToTray" Content="关闭按钮         "/>
            <RadioButton x:Name="chkMinimunBtnToTray" Content="最小化按钮         "/>
            <RadioButton x:Name="chkTrayBtnToTray" Content="仅托盘图标按钮"/>-->
            <flat:UneditableComboBox x:Name="cbbTrayMode">
                <ComboBoxItem>不显示托盘图标</ComboBoxItem>
                <ComboBoxItem>点击关闭按钮最小化到托盘图标</ComboBoxItem>
                <ComboBoxItem>点击最小化按钮最小化到托盘图标</ComboBoxItem>
                <ComboBoxItem>仅点击托盘图标最小化到托盘图标</ComboBoxItem>
            </flat:UneditableComboBox>
        </StackPanel>
        <TextBlock FontSize="5"/>
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="刷新检测速度（n/s）：   " />
            <flat:TextBox x:Name="txtUpdateSpeed"  MinWidth="36"  />
        </StackPanel>
        <TextBlock FontSize="5"/>
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="动画帧率（frame/s）：   " />
            <flat:TextBox x:Name="txtAnimationFps" MinWidth="36"  />
        </StackPanel>
        <TextBlock FontSize="5"/>
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="歌词默认偏移（s）：     " />
            <flat:TextBox x:Name="txtOffset"  MinWidth="36" />
        </StackPanel>
        <TextBlock FontSize="5"/>
        <!--<StackPanel Orientation="Horizontal">
            <TextBlock Text="采样率：     " />
            <TextBox x:Name="txtSampleRate" BorderThickness="0, 0,0,1" MinWidth="36" />
        </StackPanel>
        <TextBlock FontSize="5"/>-->
        <!--<StackPanel x:Name="stkMusicList" Orientation="Horizontal">
            <TextBlock Text="默认歌单：     " />
        </StackPanel>
        <TextBlock FontSize="5"/>-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="4"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Content="导出" Grid.Column="0" Click="ButtonExportClickEventHandler"/>
            <Button Content="导入" Grid.Column="2" Click="ButtonImportClickEventHandler"/>

            <Button Content="保存" Grid.Column="4" Click="ButtonClickEventHandler"/>

        </Grid>
    </StackPanel>
</Window>
