<UserControl x:Class="EasyMusic.UserControls.Header"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:EasyMusic.UserControls"
             mc:Ignorable="d"
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid x:Name="grdHeader"  Height="32" Background="White">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="4" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="36" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="8" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="4" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="4" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Button Grid.Column="1" Grid.ColumnSpan="10"  FocusVisualStyle="{x:Null}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <EventSetter Event="PreviewMouseDoubleClick" Handler="HeaderMouseDoubleClickEventHandler" />
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="HeaderPreviewMouseLeftButtonDownEventHandler" />
                    <EventSetter Event="PreviewMouseMove" Handler="Button_PreviewMouseMove" />
                    <EventSetter Event="PreviewMouseUp" Handler="Button_PreviewMouseUp" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Canvas Background="{DynamicResource backgroundBrushColor}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

        <Image x:Name="imgAlbum" Source="{Binding AlbumImageSource}"  Height="32" MouseLeave="ImgAlbumMouseLeaveEventHandler"  PreviewMouseDown="ImgAlbumPreviewMouseDownEventHandler" PreviewMouseUp="ImgAlbumPreviewMouseUpEventHandler" HorizontalAlignment="Left" />
        <Viewbox Grid.Column="2" IsHitTestVisible="False" HorizontalAlignment="Left">
            <TextBlock Text="{Binding HeaderText}" />
        </Viewbox>

        <Button x:Name="btnSettings" FocusVisualStyle="{x:Null}" Grid.Column="4" Width="24" Height="24"  VerticalAlignment="Top" Click="BtnSettingsClickEventHandler"  HorizontalAlignment="Left">
            <Button.Style>
                <Style  TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Canvas x:Name="btnCvs" Background="{DynamicResource backgroundBrushColor}">
                                    <Line x:Name="btnLine1" X1="4" X2="20" Y1="6" Y2=" 6" Stroke="Black" StrokeThickness="2" />
                                    <Line x:Name="btnLine2" X1="4" X2="20" Y1="12" Y2=" 12" Stroke="Black" StrokeThickness="2" />
                                    <Line x:Name="btnLine3" X1="4" X2="20" Y1="18" Y2=" 18" Stroke="Black" StrokeThickness="2" />
                                </Canvas>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource darker2BrushColor}" TargetName="btnCvs" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="btnMinimize" FocusVisualStyle="{x:Null}" Grid.Column="6" Width="24" Height="24"  VerticalAlignment="Top" Click="BtnMinimizeClickEventHandler" HorizontalAlignment="Left">
            <Button.Style>
                <Style  TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Canvas x:Name="btnCvs" Background="{DynamicResource backgroundBrushColor}">
                                    <Line x:Name="btnLine" X1="4" X2="20" Y1="12" Y2=" 12" Stroke="Black" StrokeThickness="2" />
                                </Canvas>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource darker2BrushColor}" TargetName="btnCvs" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="btnMaxmize" FocusVisualStyle="{x:Null}" Grid.Column="8" Width="24" Height="24"  VerticalAlignment="Top" Click="BtnMaxmizeClickEventHandler">
            <Button.Style>
                <Style  TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Canvas x:Name="btnCvs" Background="{DynamicResource backgroundBrushColor}">
                                    <Rectangle Margin="4" Width="16" Height="16" Stroke="Black" StrokeThickness="2" />
                                </Canvas>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource darker2BrushColor}"  TargetName="btnCvs" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="btnClose" FocusVisualStyle="{x:Null}" Grid.Column="10" Width="24" Height="24"  VerticalAlignment="Top" Click="BtnCloseClickEventHandler">
            <Button.Style>
                <Style  TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Canvas x:Name="btnCvs" Background="{DynamicResource backgroundBrushColor}">
                                    <Line x:Name="btnLine1"  X1="4" X2="20" Y1="4" Y2=" 20" Stroke="Black" StrokeThickness="2" />
                                    <Line x:Name="btnLine2"  X1="20" X2="4" Y1="4" Y2=" 20" Stroke="Black" StrokeThickness="2" />
                                </Canvas>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFE81123" TargetName="btnCvs" />
                                        <Setter Property="Stroke" Value="White" TargetName="btnLine1" />
                                        <Setter Property="Stroke" Value="White" TargetName="btnLine2" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>