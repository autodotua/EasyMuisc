<UserControl
    x:Class="EasyMusic.UserControls.ControlButton"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:EasyMusic.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:EasyMusic.UserControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="32" d:DesignWidth="32"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    FocusVisualStyle="{x:Null}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <c:NullableConvert x:Key="convert" />
    </UserControl.Resources>
    <Button
        x:Name="btn"
        Background="{DynamicResource backgroundBrushColor}"
        Click="btn_Click"
        FocusVisualStyle="{x:Null}"
        MouseEnter="BtnAnimitionMouseEnterEventHandler"
        MouseLeave="BtnAnimitionMouseLeaveEventHandler">
        <Button.Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Background="{DynamicResource backgroundBrushColor}">
                                <Viewbox
                                    x:Name="view"
                                    Width="{Binding NormalSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Opacity="{Binding NormalOpacity}">
                                    <Path
                                        x:Name="path"
                                        Data="{Binding PathData}"
                                        Fill="{DynamicResource foregroundBrushColor}"
                                        Stroke="{DynamicResource foregroundBrushColor}"
                                        StrokeThickness="{Binding PathThickness}" />
                                </Viewbox>
                            </Grid>

                            <ControlTemplate.Triggers>

                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="view" Property="Width" Value="{Binding MouseOverSize}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="view" Property="Width" Value="{Binding PressedSize}" />
                                </Trigger>
                                <!--<MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="false" />
                                        <Condition Binding="{Binding EnableDisableOpacity, Converter={StaticResource convert}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Opacity" Value="{Binding DisableOpacity, Converter={StaticResource convert}}" TargetName="view" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Button.Style>
    </Button>
</UserControl>